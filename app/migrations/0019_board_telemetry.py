# Generated by Django 5.2.1 on 2025-08-28 20:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0018_authuser_user_rank'),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('boat_number', models.PositiveIntegerField(db_index=True, help_text='Номер борта (видимый, уникальный)', unique=True)),
                ('serial_number', models.CharField(help_text='Заводской/внутренний серийный номер', max_length=64, unique=True)),
                ('flight_controller', models.CharField(blank=True, help_text='Тип полётного контроллера', max_length=64, null=True)),
                ('link_type', models.CharField(blank=True, help_text='Тип связи (например, LTE / RF / Sat)', max_length=64, null=True)),
                ('frequencies', models.CharField(blank=True, help_text='Частоты (например, 433MHz; 2.4GHz)', max_length=128, null=True)),
                ('status', models.CharField(choices=[('active', 'Активен'), ('inactive', 'Не активен'), ('service', 'На сервисе'), ('retired', 'Списан')], default='active', max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'boards',
                'ordering': ['boat_number'],
            },
        ),
        migrations.CreateModel(
            name='Telemetry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts', models.DateTimeField(db_index=True, help_text='Время события (UTC/локал — как приходит)')),
                ('type', models.CharField(blank=True, max_length=16, null=True)),
                ('raw', models.TextField(blank=True, null=True)),
                ('pretty', models.TextField(blank=True, null=True)),
                ('mode', models.CharField(blank=True, max_length=32, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('alt_m', models.FloatField(blank=True, null=True)),
                ('gs', models.FloatField(blank=True, help_text='Ground speed (м/с)', null=True)),
                ('yaw', models.FloatField(blank=True, null=True)),
                ('volt', models.FloatField(blank=True, null=True)),
                ('airspd', models.FloatField(blank=True, null=True)),
                ('wind_n', models.FloatField(blank=True, null=True)),
                ('wind_e', models.FloatField(blank=True, null=True)),
                ('wind_spd', models.FloatField(blank=True, null=True)),
                ('wind_dir', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telemetry', to='app.board')),
            ],
            options={
                'db_table': 'telemetry',
                'ordering': ['-ts'],
                'indexes': [models.Index(fields=['board', 'ts'], name='telemetry_board_ts_idx'), models.Index(fields=['ts'], name='telemetry_ts_idx')],
            },
        ),
    ]
